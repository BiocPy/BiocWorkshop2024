[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bioc2024: Interoperability between R and Python using BiocPy",
    "section": "",
    "text": "Welcome\nThe BiocPy project aims to facilitate development of Bioconductor workflows in Python.\nThis tutorial for the workshop will provide an overview of the core data structures implemented in BiocPy (e.g., GenomicRanges, SummarizedExperiment) that were ported from R. Participants will be guided through two Bioconductor-derived workflows in Python. The first will involve reading an RDS file containing genomic ranges and performing downstream range-based analyses. The second will use the scRNAseq package to access public single-cell RNA-seq datasets, followed by cell type annotation using the SinglePy package. Attendees will learn how to represent and manipulate their datasets in Python in the same manner as in R/Bioconductor.\nAll packages in BiocPy are published to PyPI, and code is open-source on GitHub.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome</span>"
    ]
  },
  {
    "objectID": "index.html#other-resources",
    "href": "index.html#other-resources",
    "title": "Bioc2024: Interoperability between R and Python using BiocPy",
    "section": "Other resources",
    "text": "Other resources\n\nA more detailed tutorial on BiocPy representations is available here.\nCheck out all the package in the BiocPy ecosystem on GitHub.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome</span>"
    ]
  },
  {
    "objectID": "index.html#developer-notes",
    "href": "index.html#developer-notes",
    "title": "Bioc2024: Interoperability between R and Python using BiocPy",
    "section": "Developer notes",
    "text": "Developer notes\nThis is a reproducible Quarto book with reusable snippets. To learn more about Quarto books visit https://quarto.org/docs/books. Check out Reproduce me for more information.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome</span>"
    ]
  },
  {
    "objectID": "tutorials/annotate_cell_types.html",
    "href": "tutorials/annotate_cell_types.html",
    "title": "Tutorial 2: Access single-cell datasets from scRNAseq collection and annotate cell types",
    "section": "",
    "text": "Introduction\nThe scRNAseq package provides access to public single-cell RNA-seq datasets for use by other Bioconductor packages and workflows. This package has been updated to store datasets in language-agnostic representations described in ArtifactDB, enabling easy access to datasets and analysis results across multiple programming languages such as R and Python.\nThe Python equivalent of the package is available here.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tutorial 2: Access single-cell datasets from `scRNAseq` collection and annotate cell types</span>"
    ]
  },
  {
    "objectID": "tutorials/annotate_cell_types.html#installation",
    "href": "tutorials/annotate_cell_types.html#installation",
    "title": "Tutorial 2: Access single-cell datasets from scRNAseq collection and annotate cell types",
    "section": "Installation",
    "text": "Installation\nInstall the package from Bioconductor for R or from PyPI for Python:\n\n\nR\nPython (shell)\n\n\n\nBiocManager::install(\"scRNAseq\", repos='http://cran.us.r-project.org')\n\n\npip install scrnaseq",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tutorial 2: Access single-cell datasets from `scRNAseq` collection and annotate cell types</span>"
    ]
  },
  {
    "objectID": "tutorials/annotate_cell_types.html#find-datasets",
    "href": "tutorials/annotate_cell_types.html#find-datasets",
    "title": "Tutorial 2: Access single-cell datasets from scRNAseq collection and annotate cell types",
    "section": "Find Datasets",
    "text": "Find Datasets\nEach dataset is decorated with metadata such as the study title, species, number of cells, etc., to facilitate discovery. Let’s see how we can list and search for datasets.\n ### List All Datasets\nThe list_datasets() function in Python or surveyDatasets() in R will display all available datasets along with their metadata.\n\n\nR\nPython\n\n\n\n\nsuppressWarnings(library(scRNAseq))\n\nLoading required package: SingleCellExperiment\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, table,\n    tapply, union, unique, unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\nall_ds &lt;- surveyDatasets()\nhead(all_ds[, c(\"name\", \"title\", \"version\")], 3)\n\nDataFrame with 3 rows and 3 columns\n                   name                  title     version\n            &lt;character&gt;            &lt;character&gt; &lt;character&gt;\n1    romanov-brain-2017 Molecular interrogat..  2023-12-19\n2   campbell-brain-2017 A molecular census o..  2023-12-14\n3 zhong-prefrontal-2018 A single-cell RNA-se..  2023-12-22\n\n\n\n\n\nimport scrnaseq\ndatasets = scrnaseq.list_datasets()\ndatasets[[\"name\", \"title\", \"version\"]].head(3)\n\n                    name  ...     version\n0     romanov-brain-2017  ...  2023-12-19\n1    campbell-brain-2017  ...  2023-12-14\n2  zhong-prefrontal-2018  ...  2023-12-22\n\n[3 rows x 3 columns]\n\n\n\n\n\nSearch for Datasets\nYou can also search for datasets based on metadata using search_datasets() in Python or searchDatasets() in R. This supports both simple text queries and complex boolean expressions.\n\n\nR\nPython\n\n\n\n\npancreas_ds &lt;- searchDatasets(\"pancreas\")\nhead(pancreas_ds[, c(\"name\", \"title\", \"version\")], 3)\n\nDataFrame with 3 rows and 3 columns\n                   name                  title     version\n            &lt;character&gt;            &lt;character&gt; &lt;character&gt;\n1 grun-bone_marrow-2016 De Novo Prediction o..  2023-12-14\n2  muraro-pancreas-2016 A Single-Cell Transc..  2023-12-19\n3   baron-pancreas-2016 A Single-Cell Transc..  2023-12-14\n\n\n\n\n\nimport scrnaseq\n\npancreas_datasets = scrnaseq.search_datasets(\"pancreas\")\npancreas_datasets[[\"name\", \"title\", \"version\"]].head(3)\n\n                    name  ...     version\n0  grun-bone_marrow-2016  ...  2023-12-14\n1   muraro-pancreas-2016  ...  2023-12-19\n2    baron-pancreas-2016  ...  2023-12-14\n\n[3 rows x 3 columns]\n\n\n\n\n\nAdvanced Searches\nFor more complex searches involving boolean operations, use define_text_query() in Python or defineTextQuery() in R. Here’s an example to find datasets using the mouse reference genome (GRCm38) and containing the words neuro or pancrea.\n\n\n\n\n\n\nTip\n\n\n\nThe define_text_query() function in Python or its equivalent defineTextQuery() in R helps us define complex queries. Check out the reference manual for more details.\n\n\n\n\nR\nPython\n\n\n\n\nsuppressWarnings(library(gypsum))\n\n\nAttaching package: 'gypsum'\n\n\nThe following object is masked from 'package:scRNAseq':\n\n    listVersions\n\nres &lt;- searchDatasets(\n    defineTextQuery(\"GRCm38\", field=\"genome\") &\n    (defineTextQuery(\"neuro%\", partial=TRUE) | \n     defineTextQuery(\"pancrea%\", partial=TRUE))\n)\nhead(res[,c(\"name\", \"title\", \"version\")], 3)\n\nDataFrame with 3 rows and 3 columns\n                    name                  title     version\n             &lt;character&gt;            &lt;character&gt; &lt;character&gt;\n1     romanov-brain-2017 Molecular interrogat..  2023-12-19\n2    campbell-brain-2017 A molecular census o..  2023-12-14\n3 fletcher-olfactory-2.. Deconstructing Olfac..  2023-12-21\n\n\n\n\n\nfrom gypsum_client import define_text_query\nimport scrnaseq\n\nres = scrnaseq.search_datasets(\n     define_text_query(\"GRCm38\", field=\"genome\")\n     & (\n          define_text_query(\"neuro%\", partial=True)\n          | define_text_query(\"pancrea%\", partial=True)\n     )\n)\nres[[\"name\", \"title\", \"version\"]].head(3)\n\n                      name  ...     version\n0       romanov-brain-2017  ...  2023-12-19\n1      campbell-brain-2017  ...  2023-12-14\n2  fletcher-olfactory-2019  ...  2023-12-21\n\n[3 rows x 3 columns]\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nOnce a dataset is identified, always list the name and version of the dataset in your scripts for reproducibility.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tutorial 2: Access single-cell datasets from `scRNAseq` collection and annotate cell types</span>"
    ]
  },
  {
    "objectID": "tutorials/annotate_cell_types.html#fetch-a-dataset",
    "href": "tutorials/annotate_cell_types.html#fetch-a-dataset",
    "title": "Tutorial 2: Access single-cell datasets from scRNAseq collection and annotate cell types",
    "section": "Fetch a Dataset",
    "text": "Fetch a Dataset\nAfter identifying a dataset of interest, use fetch_dataset() in Python or fetchDataset() in R to download the dataset. This will load the dataset as a SingleCellExperiment object.\n\n\n\n\n\n\nNote\n\n\n\nR/Bioconductor users might already be familiar with the SingleCellExperiment class. BiocPy also provides the same implementation in the singlecellexperiment package.\n\n\nFor this tutorial, let’s download the zeisel-brain dataset:\n\n\nR\nPython\n\n\n\n\nsce &lt;- fetchDataset(\"zeisel-brain-2015\", \"2023-12-14\", realize.assays=TRUE)\nsce\n\nclass: SingleCellExperiment \ndim: 20006 3005 \nmetadata(0):\nassays(1): counts\nrownames(20006): Tspan12 Tshz1 ... mt-Rnr1 mt-Nd4l\nrowData names(1): featureType\ncolnames(3005): 1772071015_C02 1772071017_G12 ... 1772066098_A12\n  1772058148_F03\ncolData names(9): tissue group # ... level1class level2class\nreducedDimNames(0):\nmainExpName: gene\naltExpNames(2): repeat ERCC\n\n\n\n\n\nimport scrnaseq\nsce = scrnaseq.fetch_dataset(\"zeisel-brain-2015\", \"2023-12-14\", realize_assays=True)\n\n/usr/local/lib/python3.10/dist-packages/genomicranges/SeqInfo.py:348: UserWarning: 'seqnames' is deprecated, use 'get_seqnames' instead\n  warn(\"'seqnames' is deprecated, use 'get_seqnames' instead\", UserWarning)\n\nprint(sce)\n\nclass: SingleCellExperiment\ndimensions: (20006, 3005)\nassays(1): ['counts']\nrow_data columns(1): ['featureType']\nrow_names(20006): ['Tspan12', 'Tshz1', 'Fnbp1l', ..., 'mt-Rnr2', 'mt-Rnr1', 'mt-Nd4l']\ncolumn_data columns(9): ['tissue', 'group #', 'total mRNA mol', 'well', 'sex', 'age', 'diameter', 'level1class', 'level2class']\ncolumn_names(3005): ['1772071015_C02', '1772071017_G12', '1772071017_A05', ..., '1772063068_D01', '1772066098_A12', '1772058148_F03']\nmain_experiment_name: gene\nreduced_dims(0): []\nalternative_experiments(2): ['repeat', 'ERCC']\nrow_pairs(0): []\ncolumn_pairs(0): []\nmetadata(0): \n\n\n\n\n\nSide-quest on SingleCellExperiment in Python\nThe Python version of the SingleCellExperiment class adheres to Bioconductor’s specification and offers similar methods. Our goal is to make it simple for analysts to switch between R and Python. Key differences include a shift from functional to object-oriented paradigms.\n\n\n\n\n\n\nNote\n\n\n\nFor more details on the design, refer to the BiocPy developer guide or the singlecellexperiment documentation.\n\n\n\n## repeated because quarto's build does not keep state of python snippets across the notebook.\nimport scrnaseq\nsce = scrnaseq.fetch_dataset(\"zeisel-brain-2015\", \"2023-12-14\")\n\nprint(\"assays: \", sce.get_assay_names()) # or sce.assay_names\n\nassays:  ['counts']\n\nprint(\"column names: \", sce.get_column_names()) # or sce.column_names\n\ncolumn names:  ['1772071015_C02', '1772071017_G12', '1772071017_A05', '1772071014_B06', '1772067065_H06', '1772071017_E02', '1772067065_B07', '1772067060_B09', '1772071014_E04', '1772071015_D04', '1772071015_C11', '1772071017_D04', '1772071017_D06', '1772067082_D07', '1772071017_F09', '1772071017_A09', '1772067094_C05', '1772067059_B06', '1772067096_E05', '1772066089_C05', '1772067094_F04', '1772071045_A01', '1772071015_C08', '1772071045_D06', '1772071017_A03', '1772071017_F07', '1772071017_E06', '1772067066_C10', '1772071017_B05', '1772071014_E06', '1772067058_D11', '1772071014_B04', '1772067066_B09', '1772071017_E10', '1772071015_B08', '1772071014_C11', '1772067066_E10', '1772067065_F11', '1772071014_H11', '1772071017_B11', '1772071014_A07', '1772071017_B03', '1772071015_B04', '1772071014_D03', '1772067065_D06', '1772067066_H08', '1772067096_G11', '1772071017_G11', '1772067054_E12', '1772067083_B12', '1772067054_G01', '1772067096_A02', '1772067093_H05', '1772067083_B09', '1772071014_H12', '1772067082_H11', '1772067094_D06', '1772071015_F03', '1772071015_B11', '1772071014_G10', '1772067066_B07', '1772067065_G01', '1772071015_F07', '1772067065_E07', '1772071015_C10', '1772067063_E06', '1772067065_A11', '1772071015_G12', '1772067058_D07', '1772067065_D01', '1772071015_A02', '1772071014_F01', '1772071015_D06', '1772071017_B02', '1772071017_D07', '1772071017_A11', '1772071017_B01', '1772071017_C07', '1772071015_H11', '1772071014_A05', '1772071017_A10', '1772071017_C08', '1772071017_B09', '1772067066_A09', '1772067065_A12', '1772071015_G04', '1772067066_B02', '1772071015_E06', '1772067064_E04', '1772071015_C01', '1772071014_F06', '1772071017_D10', '1772071017_C05', '1772071014_E05', '1772071017_E04', '1772058148_D08', '1772067065_F07', '1772062128_G08', '1772066102_B02', '1772063077_B03', '1772062114_H03', '1772066074_A03', '1772066102_C09', '1772062114_E02', '1772063068_G07', '1772062115_A12', '1772062113_F08', '1772066108_B02', '1772066102_G06', '1772067059_E03', '1772071035_G04', '1772066102_C06', '1772067057_H02', '1772062115_G05', '1772066097_G03', '1772063064_G08', '1772067082_B01', '1772066099_C04', '1772071040_A12', '1772063078_F01', '1772067082_F03', '1772071044_A03', '1772067060_B04', '1772071045_C11', '1772067083_B10', '1772066077_E08', '1772063078_F12', '1772062115_C05', '1772066099_C11', '1772063064_G03', '1772071036_E09', '1772062128_D11', '1772067058_A12', '1772063078_B02', '1772066108_E06', '1772066100_A12', '1772066073_B03', '1772067076_A06', '1772062111_G03', '1772063061_H03', '1772066097_H05', '1772067065_A02', '1772066077_H12', '1772062128_G04', '1772062109_H03', '1772063063_F01', '1772062128_B10', '1772063061_B03', '1772063061_B05', '1772058177_G09', '1772066095_D02', '1772066097_G12', '1772066097_G02', '1772066100_G07', '1772066097_H01', '1772071045_H03', '1772067083_F08', '1772067083_H01', '1772066101_F04', '1772067058_H12', '1772067082_F02', '1772067058_H05', '1772071035_B09', '1772071015_H07', '1772071036_C02', '1772066108_F04', '1772071035_H02', '1772062109_H07', '1772067076_E03', '1772067059_G10', '1772067076_D04', '1772066099_H06', '1772066102_G12', '1772071035_E07', '1772066073_B02', '1772067076_A03', '1772066102_B11', '1772066089_A01', '1772066099_A01', '1772067057_H04', '1772066102_C11', '1772071045_A10', '1772066096_G01', '1772066102_H10', '1772066099_C12', '1772071044_H10', '1772067083_D10', '1772066099_E04', '1772066100_D08', '1772066099_H02', '1772066089_H04', '1772066089_B06', '1772066102_G08', '1772066102_A04', '1772066097_B06', '1772067076_E04', '1772066097_C06', '1772067057_D12', '1772066100_A05', '1772066101_F03', '1772071014_A06', '1772071015_A11', '1772071015_C09', '1772063071_A06', '1772058148_F09', '1772067066_H09', '1772067065_G10', '1772071015_A05', '1772067065_B10', '1772067065_A01', '1772062128_F10', '1772071017_H06', '1772071014_A12', '1772067065_F08', '1772058148_H04', '1772066102_B06', '1772063077_H05', '1772067076_A12', '1772067065_B12', '1772067065_G11', '1772067066_A10', '1772067066_E02', '1772067066_A11', '1772067065_B09', '1772067065_F10', '1772063063_H03', '1772071017_A01', '1772067066_D04', '1772067065_G12', '1772071017_G05', '1772071017_D12', '1772071015_A01', '1772071017_H10', '1772063070_B10', '1772063065_C02', '1772071015_E10', '1772067082_B09', '1772062115_H01', '1772071041_B06', '1772066090_C05', '1772067096_F07', '1772071015_F05', '1772067083_G04', '1772062115_G06', '1772071015_G09', '1772066095_F07', '1772071017_G02', '1772062111_C11', '1772058148_H03', '1772066100_D06', '1772071017_C10', '1772071014_B10', '1772062128_G06', '1772067057_A08', '1772063068_F12', '1772063074_E11', '1772066100_D04', '1772066100_F03', '1772067093_D01', '1772066100_E01', '1772067073_C01', '1772067083_B11', '1772067054_F12', '1772058177_D04', '1772067082_H03', '1772071017_D01', '1772067094_H08', '1772067096_A01', '1772058148_H08', '1772067093_F03', '1772071015_E08', '1772067083_C02', '1772066100_H07', '1772071014_C04', '1772067096_G05', '1772071017_A08', '1772066097_G04', '1772067094_A09', '1772067082_D05', '1772067082_B03', '1772063064_B06', '1772067082_D04', '1772067065_A08', '1772066100_F08', '1772067082_C02', '1772067082_B02', '1772067093_H07', '1772071017_A06', '1772071014_F12', '1772071014_E02', '1772067069_H02', '1772063071_B07', '1772067073_F04', '1772067069_A03', '1772067066_E04', '1772067063_C05', '1772067069_C12', '1772067064_C12', '1772071041_F07', '1772071040_B04', '1772067063_E09', '1772067070_D04', '1772067064_C07', '1772067069_A11', '1772067064_H09', '1772071040_B01', '1772067064_B04', '1772063063_E12', '1772067069_D10', '1772062109_B03', '1772067064_C09', '1772067064_D02', '1772067069_H10', '1772071017_G01', '1772067063_B02', '1772060240_A07', '1772067073_A01', '1772067064_B01', '1772067074_A06', '1772062116_B04', '1772071041_G09', '1772067069_B02', '1772067070_C01', '1772067070_A03', '1772071017_C06', '1772067064_B05', '1772067073_C12', '1772067064_C02', '1772067070_G11', '1772067074_F07', '1772067069_G06', '1772067070_F07', '1772071041_H11', '1772067066_A06', '1772071040_G08', '1772067064_G02', '1772071040_E01', '1772067070_F03', '1772067074_D05', '1772067069_G03', '1772067070_E11', '1772071017_D11', '1772071041_E12', '1772071041_F09', '1772071041_D09', '1772071041_H12', '1772067073_F08', '1772071041_D04', '1772071040_F05', '1772071041_E01', '1772071041_G07', '1772071041_G03', '1772071041_H09', '1772071041_G08', '1772067070_G08', '1772067064_F02', '1772067064_F01', '1772063063_H02', '1772063065_C11', '1772063071_G03', '1772063068_A01', '1772063071_E06', '1772071041_A04', '1772063068_B01', '1772063070_F03', '1772063063_G11', '1772063062_H11', '1772063077_D06', '1772071041_H10', '1772063064_D02', '1772067074_C05', '1772067066_B03', '1772063068_F11', '1772067070_D06', '1772067074_B09', '1772063077_D12', '1772067074_F03', '1772071041_C05', '1772067070_G12', '1772071041_A02', '1772067074_B01', '1772062115_G01', '1772067063_B12', '1772067063_H04', '1772067073_G09', '1772067069_E04', '1772067073_C04', '1772063071_H01', '1772063065_A10', '1772063068_D04', '1772067069_F05', '1772063068_F07', '1772063068_A02', '1772063063_E04', '1772063065_F02', '1772067074_F12', '1772067064_A01', '1772063064_B11', '1772062128_E10', '1772063065_F03', '1772060224_B06', '1772071041_H05', '1772062109_E06', '1772071040_G09', '1772071041_E10', '1772062128_D07', '1772062128_D10', '1772063078_B12', '1772071041_A06', '1772060240_F12', '1772063065_D04', '1772062116_B11', '1772063078_A04', '1772063068_D03', '1772062128_D12', '1772063070_E01', '1772062116_G05', '1772063068_H12', '1772063070_B11', '1772071041_A05', '1772060240_H05', '1772063065_F04', '1772063065_G10', '1772067074_D10', '1772071040_B12', '1772063065_D12', '1772063065_B02', '1772067074_F10', '1772060224_H02', '1772063068_E06', '1772071041_B01', '1772060226_F11', '1772067069_C08', '1772063065_C08', '1772062116_A06', '1772063061_A05', '1772063068_F02', '1772060240_D06', '1772063063_D11', '1772062115_C11', '1772071041_C10', '1772060225_C12', '1772063068_G11', '1772067069_C05', '1772063065_C09', '1772063065_E02', '1772063068_G10', '1772067073_B04', '1772067074_D08', '1772071040_H01', '1772063062_F07', '1772062113_E01', '1772063071_E07', '1772063065_D02', '1772063071_C08', '1772063062_F05', '1772063068_A06', '1772066104_F10', '1772058177_G10', '1772063068_H01', '1772067073_F10', '1772063062_C04', '1772062109_A11', '1772063068_C10', '1772063068_G04', '1772063065_A03', '1772062128_A09', '1772063071_F08', '1772067058_G11', '1772071015_D07', '1772071015_D08', '1772067054_G11', '1772067064_A12', '1772067066_C03', '1772066095_D06', '1772062109_F09', '1772067082_D08', '1772060224_C03', '1772071040_H03', '1772067059_E04', '1772067058_C12', '1772066073_C01', '1772067076_A05', '1772067059_A05', '1772067082_B12', '1772066100_D12', '1772067076_C01', '1772067082_F05', '1772067082_C10', '1772067082_G07', '1772066098_B05', '1772066097_H07', '1772066102_F02', '1772063062_D03', '1772067064_A11', '1772067073_E06', '1772071040_F10', '1772071040_D11', '1772062116_B02', '1772071041_D08', '1772067064_G12', '1772062109_E09', '1772067074_A02', '1772067074_C04', '1772071040_F06', '1772067074_G06', '1772067063_B09', '1772071041_F02', '1772067073_B06', '1772067073_G04', '1772067070_B11', '1772062111_H10', '1772067063_A01', '1772071040_A11', '1772071041_E04', '1772062118_B11', '1772067070_G04', '1772071040_E02', '1772071041_D11', '1772071040_B06', '1772067070_H11', '1772063071_C01', '1772062111_B01', '1772063068_C01', '1772060240_B10', '1772060240_B01', '1772066096_B04', '1772060225_E01', '1772063077_C12', '1772063065_F01', '1772062115_D01', '1772062118_A01', '1772063065_A01', '1772067070_D10', '1772071040_A01', '1772063068_B10', '1772067066_G02', '1772063077_G04', '1772063071_E01', '1772067070_D05', '1772062111_H11', '1772071041_B12', '1772063077_E05', '1772067073_F02', '1772062111_A09', '1772063061_A10', '1772062128_C12', '1772063061_A03', '1772063074_E06', '1772063064_H01', '1772071014_C08', '1772067064_H05', '1772063068_A12', '1772062109_H06', '1772062109_D03', '1772067065_G07', '1772062128_D01', '1772071014_H02', '1772063061_H04', '1772062115_C09', '1772063078_E02', '1772063061_H12', '1772063061_E05', '1772058177_G03', '1772063068_E07', '1772063061_C11', '1772063061_D11', '1772063061_E06', '1772063071_A03', '1772058171_C07', '1772063061_G12', '1772062128_H06', '1772062115_C08', '1772063061_C02', '1772063061_C06', '1772063061_H01', '1772063061_B06', '1772063071_E12', '1772058177_C10', '1772058177_H05', '1772063061_F06', '1772058177_H07', '1772058171_E01', '1772063061_A02', '1772063061_B01', '1772063068_F09', '1772063064_C02', '1772063061_G01', '1772063068_B04', '1772063077_C06', '1772063061_H08', '1772062128_E06', '1772063063_E11', '1772063070_F01', '1772063078_F03', '1772062115_D06', '1772063062_D12', '1772062113_D06', '1772063062_D06', '1772062114_F10', '1772063078_C04', '1772063068_C12', '1772062109_G11', '1772062115_E09', '1772063062_A03', '1772062114_G07', '1772062113_G03', '1772067063_H06', '1772062114_A02', '1772062109_D07', '1772062113_E03', '1772067073_H12', '1772062111_H03', '1772067073_D11', '1772063071_D09', '1772063071_E09', '1772062113_D03', '1772063070_D11', '1772067074_D06', '1772063063_A07', '1772062111_C10', '1772071041_E08', '1772063065_D09', '1772062111_E07', '1772067070_F11', '1772063063_H04', '1772067073_D12', '1772071040_G12', '1772062115_E10', '1772063068_E12', '1772060225_E04', '1772063068_G01', '1772063065_B10', '1772063065_H05', '1772060224_F11', '1772062113_A04', '1772071040_H08', '1772063074_C06', '1772063065_A08', '1772063071_B03', '1772067058_A05', '1772063071_E05', '1772062113_B05', '1772063078_E04', '1772063068_C02', '1772063068_E08', '1772063068_C05', '1772063070_D09', '1772063077_B04', '1772062114_B06', '1772063065_B05', '1772063078_D10', '1772063078_E06', '1772063078_G09', '1772063070_F09', '1772063068_B07', '1772063068_A07', '1772062114_G09', '1772060224_C05', '1772063078_C10', '1772062128_F12', '1772060240_F09', '1772062128_A11', '1772060240_E07', '1772060240_E09', '1772060240_D04', '1772063068_D02', '1772063063_A02', '1772063068_E03', '1772060240_A02', '1772060240_C06', '1772060240_B09', '1772060240_A05', '1772060240_G02', '1772063065_A06', '1772063077_B02', '1772063068_E02', '1772063068_C11', '1772063068_C06', '1772063077_A07', '1772067054_A04', '1772066073_G02', '1772066098_A07', '1772067060_B12', '1772067059_F12', '1772067082_C12', '1772067069_B11', '1772067082_F04', '1772066077_H11', '1772071044_H04', '1772067058_F04', '1772066077_D08', '1772066090_A08', '1772067093_F09', '1772066070_B03', '1772071035_C06', '1772071036_C05', '1772067083_D06', '1772066090_F10', '1772066090_F06', '1772071035_G06', '1772071036_E02', '1772067082_E08', '1772066090_C03', '1772066077_G03', '1772067054_D06', '1772067093_F07', '1772067059_A07', '1772067094_F06', '1772066073_G06', '1772071040_C06', '1772071040_D07', '1772062116_E12', '1772066073_D09', '1772067058_F12', '1772066080_B06', '1772066090_G07', '1772066099_A12', '1772067058_H04', '1772067059_G08', '1772067070_D03', '1772071044_H01', '1772062111_B08', '1772066099_F07', '1772067076_C05', '1772071040_H11', '1772066077_H01', '1772066097_E07', '1772067070_C07', '1772071017_A02', '1772062109_C04', '1772071017_G07', '1772067074_A09', '1772071041_C06', '1772067070_D09', '1772067094_B06', '1772067063_C06', '1772063063_D03', '1772071041_B09', '1772067094_A03', '1772067066_D09', '1772071017_E11', '1772071017_B07', '1772060225_G12', '1772071041_A09', '1772067069_D09', '1772066107_A06', '1772066090_G08', '1772066076_C06', '1772066102_C12', '1772066070_H06', '1772066090_H06', '1772066076_D09', '1772066080_H01', '1772066080_E04', '1772066076_E02', '1772066099_D09', '1772066080_D06', '1772066070_H11', '1772067076_B12', '1772066080_D10', '1772066099_F03', '1772067076_F06', '1772066108_H03', '1772066077_A05', '1772066076_D05', '1772066076_A05', '1772067059_B09', '1772067076_C12', '1772067060_E11', '1772066070_F03', '1772066102_B10', '1772067054_A07', '1772067096_G07', '1772066090_E03', '1772066108_D11', '1772066070_A08', '1772066076_D07', '1772066097_G06', '1772066090_H03', '1772066090_E06', '1772066102_D10', '1772066070_C01', '1772066090_F01', '1772066070_C11', '1772066077_D05', '1772066070_E05', '1772066070_C04', '1772066100_B12', '1772066097_G07', '1772066070_E08', '1772066077_E06', '1772067096_H05', '1772067082_D09', '1772066074_C01', '1772067096_E02', '1772067096_G04', '1772066102_H06', '1772067094_A04', '1772066080_B10', '1772066090_C11', '1772066077_A04', '1772066077_H08', '1772066070_A04', '1772066090_H07', '1772067082_G01', '1772066073_F08', '1772066090_D11', '1772067076_D08', '1772067082_D01', '1772067083_D02', '1772067082_A11', '1772066107_E06', '1772067094_G06', '1772066077_B01', '1772066074_F03', '1772067093_B04', '1772066070_C06', '1772066070_C05', '1772066070_E12', '1772066070_G05', '1772066070_D08', '1772066090_G10', '1772066090_A01', '1772066070_B07', '1772066090_D07', '1772066100_A08', '1772066107_G05', '1772066070_H12', '1772066077_G12', '1772066070_F02', '1772066077_B12', '1772066089_C03', '1772066077_C10', '1772071044_G04', '1772066090_H05', '1772066090_B01', '1772066090_F07', '1772066108_E08', '1772066107_C10', '1772066070_C09', '1772066077_F04', '1772066090_G09', '1772066090_A11', '1772062116_F11', '1772066070_G11', '1772066077_G09', '1772066073_E05', '1772067094_C04', '1772066070_B05', '1772066073_G08', '1772066077_C09', '1772066107_A12', '1772066074_F01', '1772067096_D04', '1772066070_C03', '1772066080_D12', '1772067096_F12', '1772066090_E04', '1772067054_C07', '1772066089_A02', '1772066070_H04', '1772066107_E01', '1772067096_C11', '1772066070_F12', '1772066107_B09', '1772066070_E09', '1772066090_C10', '1772066070_H08', '1772066099_C03', '1772066090_E09', '1772066070_F07', '1772066070_D11', '1772066089_D12', '1772066090_C09', '1772067094_D09', '1772067059_A12', '1772067096_A04', '1772067058_G12', '1772067076_D10', '1772066102_G02', '1772071035_A07', '1772071045_F12', '1772066099_D11', '1772071044_G10', '1772067076_A01', '1772071045_F02', '1772071045_G12', '1772067076_A02', '1772067054_D11', '1772071036_D10', '1772067094_H12', '1772067058_F02', '1772067096_D10', '1772066099_A04', '1772067094_F01', '1772066108_H02', '1772067094_G07', '1772071036_F11', '1772067094_H04', '1772067096_C05', '1772067096_C12', '1772067054_D04', '1772067094_H07', '1772067058_G07', '1772067094_H11', '1772067096_H06', '1772067059_E11', '1772067096_E04', '1772071044_E08', '1772067094_F02', '1772071035_D08', '1772071036_H11', '1772067094_A02', '1772067054_G10', '1772067093_H02', '1772066102_A07', '1772067058_E06', '1772067093_A03', '1772067058_G10', '1772071036_H03', '1772067096_B12', '1772067094_A12', '1772067096_A09', '1772067060_E12', '1772067094_C02', '1772066102_D04', '1772067054_B03', '1772067058_B01', '1772067082_G02', '1772067054_E07', '1772066096_D07', '1772066095_C11', '1772067054_H06', '1772066073_E09', '1772071044_A11', '1772067059_H12', '1772067058_E11', '1772067060_C03', '1772066073_H02', '1772071035_H06', '1772066080_C02', '1772071045_B06', '1772066095_E07', '1772071036_F12', '1772071044_A09', '1772067059_D05', '1772067058_A11', '1772071044_E12', '1772067076_D06', '1772066076_H02', '1772066099_A07', '1772066074_B02', '1772071044_A07', '1772066077_B07', '1772066080_H11', '1772066099_B05', '1772071044_F04', '1772071036_B10', '1772066107_G03', '1772066099_G02', '1772067057_D06', '1772066076_H07', '1772071035_A12', '1772071044_B06', '1772071035_C09', '1772071045_A07', '1772067058_F06', '1772066099_D02', '1772071036_E07', '1772066089_C07', '1772071045_F04', '1772071036_C12', '1772066107_B02', '1772071036_A09', '1772066080_F12', '1772071035_H04', '1772071036_G08', '1772067057_G05', '1772071036_A01', '1772071035_F04', '1772071036_C08', '1772067059_G04', '1772066074_C08', '1772066102_B12', '1772066107_A01', '1772071036_D07', '1772067054_A12', '1772066080_F06', '1772071035_C04', '1772066107_H11', '1772067059_D04', '1772066074_E07', '1772066107_E03', '1772066107_E05', '1772066077_A12', '1772067059_G07', '1772071036_D11', '1772067058_B06', '1772067059_C12', '1772071045_H07', '1772066107_H04', '1772067058_C06', '1772066077_D12', '1772067096_H02', '1772066107_F12', '1772071036_E04', '1772071044_D11', '1772066077_G05', '1772066107_H06', '1772066077_E05', '1772067058_E04', '1772066107_H03', '1772067057_E06', '1772066077_E04', '1772066107_G10', '1772066077_G04', '1772066077_D10', '1772066077_B09', '1772071036_C06', '1772066077_F05', '1772066090_C02', '1772066077_C11', '1772066077_A10', '1772071035_G09', '1772066107_B04', '1772066077_D06', '1772066077_E09', '1772066077_E11', '1772066077_C06', '1772066076_D06', '1772067094_E04', '1772067058_C07', '1772071035_E06', '1772067060_A01', '1772067083_B04', '1772066077_C01', '1772067057_C11', '1772066103_E06', '1772066107_D02', '1772066107_E04', '1772071045_A04', '1772067058_H06', '1772067059_H04', '1772071036_H04', '1772066090_B09', '1772066077_C04', '1772071035_D03', '1772066077_D07', '1772066107_A02', '1772067060_G04', '1772071036_G04', '1772071036_C10', '1772066096_E11', '1772071036_B06', '1772071036_B04', '1772066107_A03', '1772071036_C11', '1772071044_H06', '1772067059_D09', '1772066073_F07', '1772067094_E06', '1772066076_D02', '1772066103_C06', '1772071036_B11', '1772066089_C12', '1772066090_C04', '1772066104_H07', '1772067059_E12', '1772067076_C04', '1772071036_A11', '1772066107_C11', '1772067059_G12', '1772066103_A02', '1772071036_A12', '1772066107_A11', '1772066077_F06', '1772066096_G09', '1772066076_B02', '1772066096_E07', '1772066103_D11', '1772066108_H01', '1772066096_B07', '1772066096_D03', '1772066102_A09', '1772071045_D04', '1772067054_E05', '1772067094_H06', '1772067058_H10', '1772071044_G05', '1772071044_C07', '1772067082_C08', '1772066073_E04', '1772067058_A07', '1772071036_B05', '1772071045_H04', '1772071044_E11', '1772071044_G01', '1772067096_G10', '1772066098_H11', '1772071035_E10', '1772067094_B10', '1772067093_C02', '1772067058_C05', '1772066101_B04', '1772071045_G05', '1772067076_F05', '1772066073_E11', '1772067096_H04', '1772071044_H12', '1772066096_B12', '1772067059_E06', '1772067060_E04', '1772066097_F06', '1772066096_A09', '1772066100_B03', '1772071044_F05', '1772071035_D12', '1772066095_C04', '1772071045_E10', '1772066080_A04', '1772071035_H12', '1772066103_D05', '1772071044_F10', '1772066073_G07', '1772066096_H08', '1772066101_D06', '1772066073_A11', '1772066070_A11', '1772066080_A06', '1772066107_G02', '1772066101_C06', '1772067060_E02', '1772066089_A05', '1772066089_A06', '1772071035_D05', '1772071035_B10', '1772066108_E04', '1772071035_A06', '1772066096_F02', '1772066070_B11', '1772066108_C07', '1772066098_G02', '1772066096_D12', '1772066080_A02', '1772071035_G05', '1772066107_C06', '1772066107_B06', '1772066096_D09', '1772066095_F03', '1772066095_G06', '1772067059_C02', '1772066076_F12', '1772071035_F10', '1772066099_C06', '1772067057_C05', '1772066102_F09', '1772071035_D11', '1772066074_F08', '1772066076_D11', '1772066073_D07', '1772066077_C12', '1772066107_H01', '1772066070_B12', '1772066076_B11', '1772066080_G10', '1772066076_F09', '1772066080_C06', '1772066108_G07', '1772066096_E04', '1772066070_F10', '1772067057_H10', '1772066070_A10', '1772066095_E05', '1772066101_C09', '1772066101_G12', '1772066108_G09', '1772066089_A12', '1772066099_G06', '1772066070_H10', '1772071036_A06', '1772066089_E11', '1772066089_H05', '1772066089_F04', '1772066098_E11', '1772066096_C06', '1772066076_G10', '1772066080_A01', '1772066096_A12', '1772066101_E11', '1772066097_F11', '1772066095_G01', '1772071036_E12', '1772066096_C10', '1772066077_A01', '1772067076_C11', '1772066073_E01', '1772066099_E12', '1772066073_F01', '1772067059_H11', '1772066099_E02', '1772066073_F02', '1772066107_F04', '1772066089_G06', '1772066073_H11', '1772066103_D07', '1772067059_H10', '1772066076_A12', '1772066077_G07', '1772066089_H02', '1772067057_H06', '1772066089_H06', '1772066099_F11', '1772067057_G10', '1772066099_F01', '1772066102_E11', '1772066080_G11', '1772066102_F04', '1772066080_B05', '1772067059_A10', '1772066089_D04', '1772066096_D11', '1772066107_F06', '1772066107_D11', '1772066099_G04', '1772066102_B05', '1772071035_H10', '1772066099_A11', '1772066107_G06', '1772066107_B10', '1772066099_E06', '1772066099_B06', '1772067076_F04', '1772066073_A06', '1772066107_D04', '1772066108_F02', '1772066076_A01', '1772067076_B05', '1772071035_E04', '1772067057_D08', '1772066073_D02', '1772066073_C02', '1772066076_A09', '1772066107_B07', '1772066099_D06', '1772066107_F11', '1772066107_G01', '1772066080_H06', '1772066097_G11', '1772066074_G03', '1772066107_C04', '1772066070_F04', '1772066070_G07', '1772071035_E12', '1772066102_E12', '1772071035_B04', '1772066080_G06', '1772066099_F06', '1772066076_D01', '1772067076_D05', '1772066099_F04', '1772067057_A03', '1772066077_B11', '1772066089_C06', '1772067059_A09', '1772067076_E07', '1772067076_D09', '1772066099_G11', '1772066089_A03', '1772066099_B02', '1772066107_G12', '1772066073_C09', '1772066076_B03', '1772066080_A12', '1772066073_B04', '1772066076_E08', '1772066097_D11', '1772066080_F10', '1772066101_A08', '1772066073_E12', '1772066096_F07', '1772066073_A01', '1772066073_C03', '1772066102_F08', '1772066099_D12', '1772067057_A06', '1772066102_B01', '1772066097_F04', '1772071036_B07', '1772066099_D01', '1772066107_F10', '1772067076_E12', '1772066099_E01', '1772066102_A01', '1772066097_D12', '1772066073_D11', '1772066101_A09', '1772071044_D06', '1772066107_C12', '1772067058_A06', '1772067076_C10', '1772066097_A03', '1772066107_A05', '1772066097_A04', '1772067057_B10', '1772067057_B02', '1772066070_C02', '1772066076_F07', '1772066100_A09', '1772066102_B04', '1772066073_G12', '1772066099_G05', '1772066073_C07', '1772066077_D04', '1772066100_C10', '1772066089_E04', '1772066073_B12', '1772067076_G10', '1772066102_F10', '1772066077_G11', '1772066096_D01', '1772066102_D02', '1772066108_D05', '1772066102_A11', '1772066102_D08', '1772066110_D05', '1772067058_A09', '1772066099_B03', '1772066073_B05', '1772066099_A03', '1772066089_D02', '1772066073_B01', '1772066108_B05', '1772066102_F11', '1772066089_B03', '1772066107_D05', '1772067076_B03', '1772066076_B04', '1772066107_F09', '1772066099_H12', '1772066102_E02', '1772066108_G10', '1772066099_B01', '1772067057_C04', '1772066102_E04', '1772067094_F10', '1772067094_C10', '1772067096_H12', '1772067093_C12', '1772067093_D11', '1772067093_C04', '1772067093_F12', '1772067096_E06', '1772067094_C11', '1772067096_E08', '1772067094_G05', '1772067093_F02', '1772067093_A07', '1772067054_E11', '1772067096_A03', '1772067054_H05', '1772067082_F11', '1772067082_A06', '1772071044_C11', '1772067093_C03', '1772067082_F08', '1772066100_B01', '1772067058_B11', '1772066074_E02', '1772066098_C01', '1772066097_A02', '1772066076_G08', '1772066107_C05', '1772066073_B09', '1772067082_D12', '1772067083_D08', '1772067094_F11', '1772067093_D03', '1772067094_E03', '1772067054_E06', '1772067096_E10', '1772067096_B10', '1772067054_H11', '1772067094_D12', '1772067094_D08', '1772067094_H10', '1772067054_A09', '1772067054_A03', '1772067054_E04', '1772067054_D05', '1772066100_E05', '1772066100_A06', '1772067093_A10', '1772067058_A08', '1772067076_F11', '1772066103_G10', '1772067058_G05', '1772066104_H05', '1772066098_C05', '1772066073_D04', '1772066074_D02', '1772066095_A04', '1772067094_C09', '1772067094_F03', '1772071044_G12', '1772067096_G12', '1772067054_H12', '1772067093_G11', '1772067094_A06', '1772066103_D12', '1772067093_A01', '1772067096_E11', '1772066101_C11', '1772066107_F08', '1772067082_F01', '1772071035_C08', '1772066101_E05', '1772067082_A01', '1772066098_G10', '1772066076_B08', '1772066074_E03', '1772066104_G09', '1772066101_F12', '1772066073_E08', '1772066102_H03', '1772066107_E12', '1772067057_F10', '1772066100_C08', '1772067083_D03', '1772071044_C08', '1772066095_H08', '1772067054_A05', '1772067054_B07', '1772067058_H08', '1772066073_E02', '1772066100_F04', '1772071044_A08', '1772066098_D03', '1772066103_F12', '1772067058_F05', '1772066074_B03', '1772066097_E04', '1772066096_D04', '1772066076_D10', '1772066096_E03', '1772066102_F03', '1772066076_F10', '1772066100_D11', '1772066101_C07', '1772066100_A03', '1772067076_G09', '1772067058_A01', '1772067093_C07', '1772066070_F01', '1772067094_G04', '1772067054_B10', '1772067058_G08', '1772066100_F05', '1772066077_H06', '1772071044_E05', '1772071035_C05', '1772066103_C03', '1772066100_A10', '1772071036_A05', '1772066096_E01', '1772066080_G02', '1772066101_E12', '1772066098_D02', '1772066107_B11', '1772066098_H05', '1772066100_B07', '1772066104_A04', '1772066101_C12', '1772066101_G10', '1772066073_F09', '1772066102_B07', '1772066102_E05', '1772066102_F05', '1772066100_F10', '1772066098_C03', '1772066098_E03', '1772071035_F05', '1772066095_F06', '1772066101_C01', '1772066097_H11', '1772071036_G03', '1772066098_D05', '1772066095_G03', '1772066101_C08', '1772066101_D08', '1772066095_B11', '1772066097_C10', '1772066096_D10', '1772066098_H06', '1772066101_D03', '1772066096_E05', '1772066098_A06', '1772066080_H05', '1772066098_F07', '1772066098_B02', '1772066099_F12', '1772066090_F11', '1772066080_B01', '1772066107_B05', '1772067057_H05', '1772066102_F06', '1772066073_B08', '1772066100_G02', '1772066098_E02', '1772066097_A05', '1772066073_D10', '1772066098_E09', '1772071036_E01', '1772066101_G04', '1772066098_D09', '1772066096_B10', '1772066104_A01', '1772066097_D06', '1772066098_A08', '1772066097_D07', '1772066107_H12', '1772066089_H10', '1772066101_H01', '1772066076_C05', '1772066101_D02', '1772066089_B02', '1772066080_B12', '1772067076_A09', '1772066096_G02', '1772066097_F12', '1772066080_E06', '1772066073_F04', '1772066096_F09', '1772066074_B01', '1772066098_F02', '1772066095_D01', '1772066098_A02', '1772066101_D11', '1772066098_H04', '1772066100_A11', '1772066074_B08', '1772066099_B10', '1772066080_C05', '1772066099_C05', '1772066089_G12', '1772066099_H03', '1772066080_D01', '1772066070_A05', '1772066073_H01', '1772066101_F05', '1772066098_E01', '1772066097_E12', '1772066095_B10', '1772066096_C05', '1772066089_B10', '1772066101_F11', '1772066074_A01', '1772066097_C11', '1772066073_C10', '1772066101_A04', '1772066108_G05', '1772066097_C05', '1772066107_B12', '1772066089_F09', '1772066099_F05', '1772066090_B10', '1772066095_C01', '1772066096_E12', '1772066098_E05', '1772066102_D05', '1772066089_G05', '1772066076_A03', '1772066097_A11', '1772066102_A12', '1772066100_E09', '1772066070_H05', '1772066089_G10', '1772067076_H04', '1772066103_A05', '1772066095_C03', '1772066089_F11', '1772066073_A10', '1772066097_G10', '1772066098_C09', '1772066097_H03', '1772066096_A01', '1772067057_D10', '1772066097_H10', '1772066095_C06', '1772066095_B09', '1772066074_A09', '1772066096_F01', '1772066097_A06', '1772066102_A10', '1772066099_A08', '1772066089_A09', '1772066097_C02', '1772066102_A02', '1772066074_D07', '1772067057_C12', '1772066099_B11', '1772066076_E01', '1772066073_C11', '1772066074_F07', '1772066101_C05', '1772066096_G10', '1772066099_H05', '1772066097_B05', '1772066095_H12', '1772066076_A04', '1772066080_H03', '1772066102_G05', '1772066080_G03', '1772066073_F06', '1772067057_C06', '1772067076_A07', '1772066098_C08', '1772066097_B04', '1772066107_G04', '1772066099_G10', '1772066089_G11', '1772066097_G05', '1772066096_F12', '1772066073_C04', '1772066089_D10', '1772066099_G12', '1772066097_A01', '1772066099_A06', '1772067057_G07', '1772067076_C07', '1772067064_G07', '1772067070_D08', '1772058177_D03', '1772067074_C07', '1772063070_G03', '1772058177_D09', '1772066080_G07', '1772063063_C07', '1772066080_D07', '1772062114_G10', '1772063061_G05', '1772058171_C02', '1772067063_D03', '1772062111_F07', '1772071036_G12', '1772067070_A05', '1772062111_H05', '1772062114_A12', '1772066095_B05', '1772060226_F05', '1772066098_C04', '1772062115_A09', '1772066090_F05', '1772062109_A05', '1772062116_B05', '1772060240_A10', '1772066070_G12', '1772062115_D07', '1772063063_F08', '1772060224_G07', '1772060224_B04', '1772062115_C01', '1772066090_G12', '1772060225_A11', '1772066108_A08', '1772063078_B09', '1772063062_E07', '1772062115_G09', '1772063078_A11', '1772060225_A05', '1772062115_F08', '1772062128_B02', '1772058177_E11', '1772067059_D12', '1772063061_A09', '1772058177_A06', '1772058171_F09', '1772058171_B01', '1772058177_E10', '1772058171_H07', '1772067073_B03', '1772067069_H05', '1772063063_E07', '1772067069_B03', '1772067074_E07', '1772067069_F06', '1772060240_C09', '1772071044_G06', '1772063063_F03', '1772063063_B04', '1772067060_A02', '1772067059_F05', '1772066098_B11', '1772063061_A11', '1772063063_C02', '1772060240_F11', '1772063063_F05', '1772060225_F06', '1772063063_F10', '1772060225_E07', '1772060225_D10', '1772060225_B07', '1772063063_E10', '1772060226_G12', '1772060226_F10', '1772066077_A06', '1772062109_B08', '1772063079_C10', '1772060225_H11', '1772062111_F10', '1772066090_A04', '1772066110_F08', '1772062111_F05', '1772058177_D02', '1772062128_F06', '1772066110_H11', '1772066099_E05', '1772067076_B10', '1772066077_H04', '1772066099_D10', '1772066102_E10', '1772062111_F11', '1772062111_F06', '1772062109_C06', '1772062113_G05', '1772062111_C08', '1772062109_A03', '1772062111_C01', '1772062111_E06', '1772062109_H10', '1772066108_H11', '1772063077_C03', '1772062116_A12', '1772062109_E07', '1772066099_H01', '1772062128_B11', '1772062116_H06', '1772062113_D10', '1772062109_G03', '1772062114_B01', '1772062113_H02', '1772063074_C02', '1772062118_E08', '1772066099_B12', '1772063077_B07', '1772066096_C01', '1772062114_B10', '1772062113_B09', '1772062113_D01', '1772062109_E08', '1772062113_D08', '1772062113_G12', '1772066089_C04', '1772062115_H08', '1772062116_F01', '1772062115_C03', '1772067076_H05', '1772062115_G07', '1772066108_H05', '1772066089_E05', '1772062118_G05', '1772071041_E05', '1772063061_H11', '1772067054_A11', '1772067065_G08', '1772071040_D02', '1772071041_G10', '1772067066_C04', '1772071041_F05', '1772063070_E07', '1772063070_H07', '1772071041_F06', '1772067066_B04', '1772067060_G06', '1772067074_F09', '1772071040_C12', '1772071040_C10', '1772058148_G09', '1772067066_H05', '1772067059_D11', '1772066110_A04', '1772067064_G04', '1772067064_H01', '1772067073_D10', '1772067073_F06', '1772071041_D10', '1772058148_F07', '1772067069_D04', '1772058148_A01', '1772058148_G08', '1772067064_B10', '1772071036_G02', '1772063070_G01', '1772067070_H09', '1772058148_G11', '1772067066_E12', '1772067064_D10', '1772067063_B07', '1772062118_D03', '1772067074_F05', '1772071040_C04', '1772063070_C06', '1772058148_A03', '1772058148_B08', '1772058148_D07', '1772067073_C02', '1772067073_G10', '1772062116_C06', '1772062116_A02', '1772062116_G03', '1772062118_D02', '1772067073_E11', '1772063062_B03', '1772071040_A06', '1772058148_F02', '1772058148_A10', '1772067074_D12', '1772066080_B04', '1772062116_F05', '1772067074_E11', '1772067064_B06', '1772067073_D01', '1772067069_A09', '1772071041_D06', '1772071040_H06', '1772071040_H10', '1772062111_B11', '1772067064_C08', '1772067069_A02', '1772060240_H04', '1772062116_B06', '1772063063_H07', '1772067074_A11', '1772062111_B02', '1772067074_F04', '1772063063_D08', '1772071040_G11', '1772063063_G10', '1772071040_D04', '1772062118_C04', '1772062109_C12', '1772062109_H04', '1772071040_G05', '1772060240_F06', '1772071040_C11', '1772067064_C10', '1772063070_G06', '1772062128_H02', '1772062128_D03', '1772063061_B12', '1772058148_C02', '1772062116_C11', '1772063061_F04', '1772060225_D12', '1772058177_C06', '1772060240_B12', '1772062113_B06', '1772062114_H12', '1772063062_A06', '1772062109_G05', '1772063079_C12', '1772062116_G06', '1772062113_G01', '1772062113_F02', '1772062113_B01', '1772062111_C09', '1772062111_G02', '1772060224_A07', '1772062113_F07', '1772062114_F03', '1772062111_D11', '1772058171_F05', '1772062111_E03', '1772062113_A05', '1772060224_C04', '1772058171_G08', '1772062113_B04', '1772062113_D09', '1772062109_C07', '1772062109_F01', '1772062113_G11', '1772062114_A03', '1772058177_A02', '1772058171_C03', '1772062109_A07', '1772063061_A07', '1772062111_G01', '1772058171_C12', '1772058171_D10', '1772062109_B01', '1772063079_F07', '1772058171_H02', '1772062128_H11', '1772066108_D06', '1772062111_D05', '1772062113_C03', '1772062116_B12', '1772062118_F02', '1772062114_C07', '1772067057_B03', '1772062118_F08', '1772062114_B03', '1772058171_D06', '1772063062_C10', '1772058171_C09', '1772063062_C07', '1772062116_E08', '1772062116_E07', '1772062113_B03', '1772062116_A09', '1772062114_E11', '1772062128_H05', '1772058148_A06', '1772062111_G11', '1772062113_A01', '1772060224_G06', '1772062109_A12', '1772062115_B06', '1772066108_G12', '1772071040_D12', '1772058171_F06', '1772063063_D06', '1772062116_D04', '1772063064_D06', '1772063074_G12', '1772062113_A02', '1772058148_A04', '1772062113_A12', '1772063062_H08', '1772063063_B06', '1772062113_F03', '1772062109_C03', '1772062116_F04', '1772063062_G01', '1772062116_E02', '1772063062_C01', '1772063074_H11', '1772063079_D07', '1772071040_G04', '1772063063_A01', '1772063063_A12', '1772071014_D12', '1772062109_A09', '1772067069_G04', '1772062111_E11', '1772063074_A11', '1772063062_G11', '1772062118_H04', '1772062109_F04', '1772060240_C04', '1772067074_F06', '1772063063_B10', '1772071041_A08', '1772063062_B04', '1772066097_B12', '1772062114_E05', '1772063077_D02', '1772060240_G11', '1772063074_C12', '1772062118_H10', '1772060224_H04', '1772060240_F04', '1772063062_F12', '1772062115_D05', '1772071040_D05', '1772063074_G07', '1772063063_G02', '1772063061_G08', '1772063061_D10', '1772062114_E06', '1772062111_E04', '1772060224_H05', '1772063062_D05', '1772063061_D01', '1772060240_F02', '1772062114_F05', '1772071041_A12', '1772062116_H05', '1772063062_G05', '1772063062_E08', '1772063062_E11', '1772062118_C01', '1772071040_A08', '1772062128_A01', '1772063078_H04', '1772063063_C10', '1772062113_G09', '1772062115_E01', '1772063074_F10', '1772063068_D10', '1772063062_E01', '1772063063_B11', '1772063062_A08', '1772060225_E02', '1772063061_F05', '1772071041_A10', '1772062118_A03', '1772063079_F04', '1772071041_B04', '1772062116_A11', '1772062118_B03', '1772063061_G11', '1772063061_D12', '1772063078_B01', '1772062113_B11', '1772062115_A04', '1772060225_G01', '1772066098_A04', '1772063078_E11', '1772066098_B04', '1772060225_C05', '1772062115_D04', '1772063078_B06', '1772062118_F10', '1772063068_G06', '1772063078_C07', '1772063078_B07', '1772062113_A08', '1772062115_C06', '1772060225_C11', '1772063077_E09', '1772063074_A04', '1772063074_G04', '1772062115_B10', '1772060225_G04', '1772060224_A11', '1772060224_B03', '1772060224_C10', '1772062115_C04', '1772062111_B04', '1772060225_C07', '1772062114_B09', '1772063062_F03', '1772063078_F05', '1772063078_C09', '1772060240_F10', '1772062116_E04', '1772063078_C08', '1772063078_F02', '1772063078_B11', '1772062115_A02', '1772060224_D03', '1772062111_A12', '1772063078_F11', '1772066080_D05', '1772060240_G10', '1772062116_E01', '1772060225_G06', '1772060240_A12', '1772063079_C01', '1772060224_A06', '1772063061_H10', '1772062114_D06', '1772066096_C04', '1772063061_C05', '1772060225_F12', '1772063061_E08', '1772062118_E02', '1772062114_H05', '1772063061_C03', '1772062114_H10', '1772062115_A06', '1772062114_B12', '1772063079_E08', '1772063061_B11', '1772063061_F11', '1772066070_C12', '1772062114_A08', '1772063078_G08', '1772063074_A09', '1772060225_B12', '1772063079_A06', '1772063077_D09', '1772060224_A02', '1772062118_B05', '1772060225_F09', '1772063074_G10', '1772063079_A12', '1772063079_D01', '1772063074_F12', '1772067073_A08', '1772063077_C01', '1772060225_A12', '1772063079_F09', '1772063078_A03', '1772062114_H04', '1772062115_D03', '1772063064_E03', '1772063079_D08', '1772060224_E09', '1772063079_H03', '1772062111_H07', '1772060224_H11', '1772063074_H10', '1772063064_D09', '1772066089_F12', '1772062116_F10', '1772063078_E03', '1772060224_B05', '1772060224_D01', '1772063079_D09', '1772063063_H08', '1772060225_G07', '1772060226_D12', '1772063062_D01', '1772063064_H11', '1772062114_D10', '1772060225_H12', '1772060226_A01', '1772060226_A11', '1772060226_D01', '1772060226_D11', '1772060225_D07', '1772060226_F06', '1772060226_A07', '1772060226_D03', '1772060226_D04', '1772060226_E10', '1772060226_B11', '1772060226_A08', '1772060226_G04', '1772060226_H11', '1772060226_G06', '1772060226_H04', '1772060226_G11', '1772060226_F04', '1772060226_F08', '1772060226_C07', '1772060226_B03', '1772060226_G05', '1772060226_A12', '1772063065_F12', '1772060226_B04', '1772060226_B10', '1772062114_A06', '1772060226_C04', '1772060226_H01', '1772060226_B07', '1772062115_E11', '1772060226_G10', '1772060226_A06', '1772060226_B02', '1772060226_E05', '1772060226_C03', '1772060226_E12', '1772060226_D06', '1772060226_A10', '1772060226_E11', '1772060226_B12', '1772060225_E12', '1772062115_E07', '1772063068_F10', '1772062111_B05', '1772062111_C06', '1772063065_H06', '1772062111_C02', '1772060225_B06', '1772062128_E11', '1772058148_B06', '1772063079_E02', '1772060225_A07', '1772066100_F06', '1772063074_A12', '1772062118_G06', '1772062114_F08', '1772062115_C10', '1772062128_C05', '1772063077_F04', '1772060225_H10', '1772063074_H05', '1772060224_A01', '1772060225_C02', '1772062109_F08', '1772062115_G04', '1772060225_D08', '1772062115_F05', '1772060224_B08', '1772062115_B03', '1772063074_C03', '1772062113_E10', '1772063068_A09', '1772060224_F03', '1772062128_G11', '1772060225_C04', '1772060225_D09', '1772062113_C09', '1772062128_B04', '1772063062_F08', '1772063068_E05', '1772062114_C06', '1772060224_C08', '1772063061_D05', '1772062109_D10', '1772063077_A12', '1772063078_D05', '1772063078_B08', '1772063071_A05', '1772063078_A09', '1772063062_D10', '1772063065_D03', '1772063079_G07', '1772066095_A03', '1772066098_A11', '1772063068_B05', '1772063077_D10', '1772063068_F06', '1772063078_G01', '1772063065_B03', '1772062109_C11', '1772063078_D09', '1772066077_A03', '1772063065_H08', '1772063062_D08', '1772063074_E01', '1772062111_G04', '1772063064_G09', '1772067070_C09', '1772060225_D06', '1772062109_B11', '1772062115_A10', '1772062118_D10', '1772063068_H06', '1772062111_A10', '1772063065_A02', '1772066098_F01', '1772066070_B06', '1772066097_D10', '1772063062_F09', '1772066098_A03', '1772063062_F01', '1772066098_D10', '1772066074_A08', '1772066101_H08', '1772060226_H10', '1772066098_E12', '1772062118_H05', '1772062118_B06', '1772066098_C06', '1772066095_F09', '1772067059_A01', '1772062116_F08', '1772071035_A02', '1772067074_A01', '1772062111_E08', '1772063078_D12', '1772062111_C03', '1772067094_E11', '1772062111_D09', '1772067058_A10', '1772062118_C07', '1772063079_H01', '1772063063_E02', '1772058171_E06', '1772066108_E05', '1772062128_H08', '1772066104_C11', '1772063063_C08', '1772066102_A05', '1772062118_H03', '1772063074_E07', '1772067094_F05', '1772063063_A04', '1772067083_C11', '1772067060_F01', '1772058148_G01', '1772058148_E07', '1772067058_D12', '1772063061_E07', '1772067054_A06', '1772062128_E09', '1772066107_E11', '1772067054_C12', '1772067070_C12', '1772062128_G02', '1772071045_D02', '1772058177_D06', '1772058177_F03', '1772062128_E12', '1772062128_F09', '1772058177_D08', '1772062118_A05', '1772063063_E06', '1772066070_G10', '1772062128_C01', '1772071045_E11', '1772066076_G06', '1772066103_H11', '1772063063_E05', '1772071045_F05', '1772066076_B12', '1772067058_F10', '1772062128_D09', '1772067064_A09', '1772067054_F08', '1772067096_F04', '1772067059_C11', '1772066096_G11', '1772062115_G11', '1772067076_B09', '1772063063_A11', '1772066100_G06', '1772067058_B10', '1772063070_D01', '1772067060_H04', '1772058148_B01', '1772058148_A11', '1772067059_E05', '1772067063_G11', '1772062128_F08', '1772067060_E10', '1772066076_G04', '1772066098_D12', '1772058148_A09', '1772063074_B06', '1772066090_D10', '1772067076_G01', '1772066076_F05', '1772066108_H10', '1772067059_G06', '1772066095_F11', '1772066077_B04', '1772066102_G11', '1772066108_E12', '1772058177_E04', '1772067076_B06', '1772067057_A12', '1772066090_B02', '1772066077_C02', '1772067076_G12', '1772062115_E03', '1772066099_E11', '1772066108_A05', '1772062118_H12', '1772062111_C04', '1772066108_C04', '1772062115_H05', '1772062109_B05', '1772062109_D04', '1772066076_F11', '1772060224_D10', '1772066108_H08', '1772066102_D12', '1772063074_A01', '1772062118_C10', '1772063062_E06', '1772062118_G11', '1772062111_C05', '1772062115_B11', '1772062115_G12', '1772062118_F01', '1772066076_E05', '1772063062_H01', '1772062113_D12', '1772062111_E12', '1772062113_C02', '1772062114_A01', '1772062118_D05', '1772062118_G02', '1772062115_B08', '1772062109_H02', '1772062111_B07', '1772062111_B10', '1772062109_F06', '1772062113_C06', '1772062113_C11', '1772063070_C10', '1772062111_A07', '1772062111_H04', '1772063061_F12', '1772063079_H02', '1772062118_E01', '1772062115_E04', '1772062109_F12', '1772063070_D05', '1772062113_G06', '1772063061_E12', '1772062113_E02', '1772062113_H11', '1772062111_H02', '1772062113_D04', '1772063079_D02', '1772063079_E09', '1772066095_G12', '1772063061_D02', '1772063078_F04', '1772062113_F12', '1772063079_C04', '1772062116_H02', '1772058171_B09', '1772062115_C07', '1772063064_E07', '1772066108_H04', '1772067060_D02', '1772063079_D11', '1772062113_E07', '1772058171_B04', '1772058177_E07', '1772067076_D02', '1772058177_D12', '1772058171_E07', '1772058177_C01', '1772058171_A02', '1772058171_B05', '1772062111_E05', '1772058171_D03', '1772058177_A03', '1772058171_E02', '1772058171_A04', '1772063074_D10', '1772058171_G01', '1772058177_E06', '1772058177_C02', '1772058177_B05', '1772058171_D04', '1772058171_D01', '1772058177_F08', '1772058171_C01', '1772058171_F03', '1772058171_A11', '1772058171_G11', '1772058171_A09', '1772058171_F08', '1772058177_F06', '1772058171_B08', '1772058171_G03', '1772058177_A01', '1772058177_B06', '1772058148_G12', '1772058171_B07', '1772058177_G05', '1772063064_F07', '1772058171_E10', '1772058171_B06', '1772058177_E12', '1772058171_D02', '1772058177_B04', '1772062128_F04', '1772058171_D08', '1772058171_E05', '1772058177_B09', '1772058177_C12', '1772058177_D05', '1772058171_G10', '1772058171_C04', '1772058171_C08', '1772058171_C10', '1772062128_C10', '1772063061_B04', '1772058171_F04', '1772060226_D02', '1772062109_F11', '1772066090_E08', '1772067057_G11', '1772058148_F06', '1772058177_A09', '1772058177_A07', '1772060225_E03', '1772058177_D10', '1772058177_D11', '1772062109_D01', '1772058177_C03', '1772062109_E05', '1772062128_F05', '1772067070_C04', '1772066095_B12', '1772058148_E12', '1772058148_D12', '1772058148_A05', '1772066104_B07', '1772062111_G10', '1772060226_E03', '1772060240_H11', '1772066096_G06', '1772058177_A12', '1772062128_C02', '1772066095_G07', '1772058171_C05', '1772062128_A07', '1772058177_E01', '1772058177_B11', '1772058177_F07', '1772058177_G04', '1772063074_B03', '1772058171_F11', '1772062113_A11', '1772062111_H06', '1772063061_F10', '1772062116_D02', '1772062115_A07', '1772062115_C02', '1772062109_E12', '1772062109_D06', '1772062128_D02', '1772062118_F04', '1772063078_G02', '1772063063_H11', '1772062118_A11', '1772060224_F07', '1772063077_F06', '1772062111_A05', '1772060224_B12', '1772066076_A07', '1772067064_D12', '1772060240_F05', '1772063077_E03', '1772063074_F08', '1772058177_F04', '1772067074_D04', '1772066080_F07', '1772062111_G06', '1772062109_D12', '1772062109_A06', '1772062113_E05', '1772062111_F12', '1772062118_H01', '1772063074_H12', '1772067064_B09', '1772067057_B09', '1772060224_H07', '1772067094_C07', '1772067070_C02', '1772067096_G06', '1772060240_H10', '1772062116_G09', '1772067058_C04', '1772063077_D08', '1772063063_A03', '1772060226_H12', '1772066090_B06', '1772062118_F03', '1772063062_D07', '1772062128_H04', '1772062118_E06', '1772071044_B03', '1772060225_F05', '1772060226_F12', '1772062115_H11', '1772062109_C05', '1772058177_E03', '1772060224_B07', '1772060226_H02', '1772062118_D09', '1772062118_F11', '1772062111_D12', '1772062128_B03', '1772066090_D03', '1772063071_E02', '1772063064_A11', '1772060224_B09', '1772063078_H11', '1772063061_G03', '1772063071_D01', '1772063064_B05', '1772062111_E02', '1772063062_H12', '1772058177_C08', '1772058148_A07', '1772060240_A03', '1772067070_H08', '1772063079_C02', '1772063071_A01', '1772063079_A09', '1772067070_C05', '1772063079_A11', '1772062113_G08', '1772062128_G09', '1772060240_D11', '1772071044_B01', '1772071036_E10', '1772062113_D11', '1772063063_B01', '1772058171_E12', '1772063064_F06', '1772058148_H05', '1772066103_B12', '1772058177_G06', '1772058177_H06', '1772058177_H02', '1772058177_D01', '1772058171_E11', '1772058177_F10', '1772058171_G09', '1772058171_G07', '1772058177_F12', '1772058177_G12', '1772058171_F01', '1772058171_H05', '1772058171_G05', '1772062128_D06', '1772063079_B05', '1772062109_H08', '1772062109_D05', '1772062111_D07', '1772063077_D11', '1772062113_H07', '1772062111_G12', '1772063079_C11', '1772063079_H12', '1772060224_E05', '1772063070_F11', '1772062114_A09', '1772062111_H12', '1772063070_B04', '1772063064_E04', '1772058177_G07', '1772062113_C01', '1772067073_A12', '1772063063_C11', '1772062109_B07', '1772067058_F03', '1772071040_D01', '1772063063_G05', '1772067069_E07', '1772067063_A11', '1772071040_F09', '1772067063_A07', '1772066096_C02', '1772066098_E07', '1772058148_D04', '1772067074_H04', '1772058148_E02', '1772067073_B09', '1772063071_D11', '1772071040_E11', '1772067074_H09', '1772071041_H04', '1772067073_F07', '1772058148_C04', '1772058148_E09', '1772067074_H08', '1772058148_F12', '1772071036_D04', '1772063070_A07', '1772067074_F11', '1772063064_B04', '1772063070_A05', '1772071040_B11', '1772063070_E06', '1772066102_E06', '1772060240_D07', '1772067063_B03', '1772058148_F05', '1772066108_B09', '1772066102_C04', '1772060224_A05', '1772063070_G07', '1772066095_B03', '1772063065_D10', '1772060226_E09', '1772063061_B10', '1772062115_F01', '1772063065_D08', '1772066097_C03', '1772058148_F10', '1772066077_E10', '1772063065_B12', '1772063063_H05', '1772063068_B12', '1772067058_D06', '1772062109_G06', '1772062116_H04', '1772063062_G06', '1772058171_G04', '1772067063_D05', '1772058177_A05', '1772058177_F11', '1772063079_A07', '1772062116_H07', '1772063070_F02', '1772060224_C09', '1772067073_H05', '1772058171_A12', '1772067073_H10', '1772067074_D07', '1772062109_E02', '1772060224_F01', '1772066099_F09', '1772062111_A11', '1772058171_A06', '1772060224_F04', '1772060224_H12', '1772063071_F12', '1772062111_A08', '1772058177_A08', '1772060224_H01', '1772066095_A07', '1772058177_B01', '1772062111_B12', '1772063064_A08', '1772063064_B02', '1772062115_G08', '1772062114_H08', '1772063071_G12', '1772060225_H04', '1772058177_H03', '1772063064_F09', '1772060224_D12', '1772066080_C04', '1772063062_B10', '1772062128_E01', '1772062128_A02', '1772062128_C11', '1772060240_B11', '1772063078_A02', '1772058148_B03', '1772062128_C09', '1772062116_C03', '1772058177_H04', '1772063071_B06', '1772067063_E01', '1772058171_A01', '1772062111_F09', '1772066104_A09', '1772060240_G06', '1772062109_B04', '1772063071_B12', '1772063071_D02', '1772067058_D10', '1772067069_H12', '1772063062_A05', '1772063071_G02', '1772066096_E06', '1772071014_H04', '1772066098_B06', '1772071044_C05', '1772067058_E08', '1772071044_C04', '1772067096_A11', '1772066098_C02', '1772071045_F10', '1772066076_C10', '1772062109_D11', '1772062111_B03', '1772071014_C07', '1772067063_E05', '1772071045_D05', '1772071015_H09', '1772071014_G04', '1772071014_H07', '1772071014_D06', '1772071014_F02', '1772058171_H01', '1772071015_A08', '1772071015_D10', '1772067064_A10', '1772071015_H10', '1772062118_H11', '1772067069_C11', '1772071014_E01', '1772071015_D02', '1772062128_D05', '1772071014_D07', '1772071014_A02', '1772063071_H08', '1772062128_E02', '1772066110_G07', '1772066096_C07', '1772066096_B01', '1772063077_F03', '1772058177_E09', '1772066096_A04', '1772071036_F10', '1772066076_A11', '1772066102_H01', '1772062109_F07', '1772058177_D07', '1772067076_F10', '1772058171_F07', '1772062114_D03', '1772062114_B05', '1772058177_B03', '1772058171_B03', '1772063064_D08', '1772071015_A12', '1772071015_G05', '1772063062_B05', '1772063061_F08', '1772062128_B12', '1772062114_E01', '1772063068_F04', '1772063065_D11', '1772063064_H03', '1772066098_C10', '1772058171_A08', '1772063071_B11', '1772062128_E04', '1772063071_H07', '1772063071_H09', '1772062118_G01', '1772063062_D09', '1772063068_D06', '1772066095_B02', '1772063065_E10', '1772062115_D08', '1772060226_B09', '1772066099_H10', '1772063071_H02', '1772066080_C10', '1772066090_G04', '1772066095_C10', '1772063077_A11', '1772066098_B12', '1772066076_E12', '1772067060_G01', '1772066098_A01', '1772067082_A12', '1772066090_A06', '1772066101_G05', '1772066098_D07', '1772067076_H10', '1772071036_E06', '1772067060_D10', '1772066080_A11', '1772066070_E03', '1772066090_C12', '1772066090_F08', '1772071036_F04', '1772062128_F01', '1772066070_A06', '1772062118_A08', '1772062114_B04', '1772062128_C08', '1772066110_D07', '1772062109_A08', '1772067057_E02', '1772062115_F11', '1772060240_F07', '1772062113_F04', '1772062118_A10', '1772062114_D04', '1772063077_G09', '1772063077_F11', '1772060240_B02', '1772058148_C01', '1772067093_A09', '1772060224_G08', '1772060240_D05', '1772060240_B05', '1772071044_C01', '1772060224_D09', '1772062109_E04', '1772063061_C12', '1772063063_F04', '1772071045_C02', '1772063074_D02', '1772062109_E11', '1772060240_H12', '1772066077_D11', '1772062118_G03', '1772071041_B08', '1772067096_A10', '1772062114_F06', '1772067054_G12', '1772063062_C11', '1772062113_E12', '1772067063_G08', '1772058148_G05', '1772063064_E06', '1772058148_C05', '1772062128_C04', '1772063063_E01', '1772060224_E12', '1772058148_E08', '1772058177_C04', '1772063077_B01', '1772063077_E12', '1772058148_C09', '1772063074_C07', '1772063063_F12', '1772067073_H07', '1772067066_C06', '1772067073_E04', '1772067064_C11', '1772063063_G08', '1772067063_E07', '1772066090_F02', '1772062116_B01', '1772067063_A06', '1772066076_E11', '1772071040_B09', '1772071044_H11', '1772066102_D01', '1772071045_H02', '1772067070_B12', '1772058148_G03', '1772058148_E06', '1772062128_G01', '1772058148_F08', '1772062111_A04', '1772062118_C05', '1772063061_D08', '1772063062_E03', '1772067074_F02', '1772060226_C10', '1772063078_D03', '1772067083_H04', '1772060225_C06', '1772066101_B02', '1772062109_G12', '1772067094_B04', '1772066080_C03', '1772063078_G04', '1772062128_E07', '1772063070_B07', '1772063078_G06', '1772067059_C05', '1772066100_B04', '1772060226_H05', '1772058148_B11', '1772066110_H07', '1772067058_B03', '1772062128_E08', '1772062113_C04', '1772058177_G08', '1772060240_H06', '1772063078_G03', '1772071035_H05', '1772066098_F09', '1772063077_D01', '1772066090_G01', '1772067076_H12', '1772066076_G11', '1772067093_E09', '1772067094_G09', '1772066108_B03', '1772067057_F12', '1772067076_E06', '1772067060_H11', '1772067059_E10', '1772067094_G10', '1772066080_C11', '1772066096_C12', '1772066102_C03', '1772066101_B07', '1772066110_F06', '1772058148_B12', '1772063063_C12', '1772066076_F02', '1772060226_E06', '1772063065_A11', '1772058148_D11', '1772058148_C07', '1772058148_B02', '1772058148_A12', '1772071041_G06', '1772063079_E03', '1772058177_B08', '1772066110_A07', '1772063078_E07', '1772058177_B10', '1772060240_C12', '1772067073_A03', '1772067069_E08', '1772058148_D03', '1772058148_D10', '1772067060_B11', '1772063062_D11', '1772058148_F01', '1772063062_D04', '1772066076_H03', '1772058177_G01', '1772062111_B09', '1772066076_C02', '1772062113_E06', '1772066080_B09', '1772063061_C07', '1772062111_D02', '1772063077_A05', '1772063079_F03', '1772063077_B05', '1772058171_E08', '1772062113_H10', '1772067074_G05', '1772062113_D02', '1772066076_C01', '1772066080_E09', '1772067057_E04', '1772066080_D11', '1772067074_C09', '1772063077_B06', '1772066076_H04', '1772062116_E06', '1772067064_D03', '1772063063_G07', '1772067063_E08', '1772058148_G02', '1772066080_G05', '1772063074_F11', '1772063074_C04', '1772062111_E09', '1772062111_F01', '1772063074_H03', '1772063062_H10', '1772058148_D02', '1772063078_G10', '1772066110_D12', '1772071017_A07', '1772063071_G10', '1772058148_C03', '1772063061_D09', '1772067059_B04', '1772066097_D04', '1772063068_D01', '1772066098_A12', '1772058148_F03']\n\nprint(\"column metadata:\", sce.get_column_data()) # or sce.column_data\n\ncolumn metadata: BiocFrame with 3005 rows and 9 columns\n                       tissue            group #     total mRNA mol               well                sex                age           diameter\n                 &lt;StringList&gt; &lt;ndarray[float64]&gt; &lt;ndarray[float64]&gt; &lt;ndarray[float64]&gt; &lt;ndarray[float64]&gt; &lt;ndarray[float64]&gt; &lt;ndarray[float64]&gt;\n1772071015_C02       sscortex                1.0            21580.0               11.0                1.0               21.0                0.0\n1772071017_G12       sscortex                1.0            21748.0               95.0               -1.0               20.0               9.56\n1772071017_A05       sscortex                1.0            31642.0               33.0               -1.0               20.0               11.1\n                          ...                ...                ...                ...                ...                ...                ...\n1772063068_D01       sscortex                9.0             4015.0                4.0                1.0               26.0               8.63\n1772066098_A12 ca1hippocampus                9.0             2896.0               89.0               -1.0               26.0               9.23\n1772058148_F03       sscortex                9.0             4460.0               22.0                1.0               26.0               10.4\n                     level1class  level2class\n                    &lt;StringList&gt; &lt;StringList&gt;\n1772071015_C02      interneurons        Int10\n1772071017_G12      interneurons        Int10\n1772071017_A05      interneurons         Int6\n                             ...          ...\n1772063068_D01 endothelial-mural         Vsmc\n1772066098_A12 endothelial-mural         Vsmc\n1772058148_F03 endothelial-mural         Vsmc\n\nprint(\"access counts \", sce.assays[\"counts\"]) # or # sce.assay(\"counts\")\n\naccess counts  &lt;20006 x 3005&gt; sparse ReloadedArray object of type 'uint16'\n[[  0,   0,   0, ...,   0,   0,   1],\n [  3,   1,   0, ...,   0,   0,   1],\n [  3,   1,   6, ...,   0,   0,   0],\n ...,\n [158, 326, 209, ..., 193,  36, 359],\n [ 31,  88,  97, ...,  50,  12,  52],\n [ 13,  14,   9, ...,  18,   3,  13]]\n\nprint(\"coerce to AnnData\", sce.to_anndata())\n\n/usr/local/lib/python3.10/dist-packages/summarizedexperiment/BaseSE.py:1194: RuntimeWarning: Converting delayedarray into sparse, may require more memory\n  warnings.warn(\ncoerce to AnnData (AnnData object with n_obs × n_vars = 3005 × 20006\n    obs: 'tissue', 'group #', 'total mRNA mol', 'well', 'sex', 'age', 'diameter', 'level1class', 'level2class'\n    var: 'featureType'\n    layers: 'counts', None)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tutorial 2: Access single-cell datasets from `scRNAseq` collection and annotate cell types</span>"
    ]
  },
  {
    "objectID": "tutorials/annotate_cell_types.html#annotate-cell-types",
    "href": "tutorials/annotate_cell_types.html#annotate-cell-types",
    "title": "Tutorial 2: Access single-cell datasets from scRNAseq collection and annotate cell types",
    "section": "Annotate Cell Types",
    "text": "Annotate Cell Types\nWe can now annotate cell types by using reference datasets and matching cells based on their expression profiles. In this tutorial, we will use singleR in R or its Python equivalent singler.\nBefore running the singler algorithm, we need to fetch reference datasets from the celldex package.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tutorial 2: Access single-cell datasets from `scRNAseq` collection and annotate cell types</span>"
    ]
  },
  {
    "objectID": "tutorials/annotate_cell_types.html#access-reference-datasets-from-celldex",
    "href": "tutorials/annotate_cell_types.html#access-reference-datasets-from-celldex",
    "title": "Tutorial 2: Access single-cell datasets from scRNAseq collection and annotate cell types",
    "section": "Access Reference Datasets from celldex\n",
    "text": "Access Reference Datasets from celldex\n\nSimilar to scRNAseq, the celldex references are converted into language-agnostic representations for use in downstream analyses.\n\n\n\n\n\n\nNote\n\n\n\nThe celldex package is available on R/Bioconductor and PyPI.\n\n\nFor this tutorial, let’s download the Human Primary Cell Atlas reference from celldex using fetch_reference() in Python or fetchReference() in R.\n\n\nR\nPython\n\n\n\n\nsuppressWarnings(library(celldex))\n\n\nAttaching package: 'celldex'\n\n\nThe following object is masked from 'package:gypsum':\n\n    listVersions\n\n\nThe following objects are masked from 'package:scRNAseq':\n\n    fetchLatestVersion, fetchMetadata, listVersions\n\nimmgen_ref &lt;- fetchReference(\"immgen\", \"2024-02-26\", realize.assays=TRUE)\nimmgen_ref\n\nclass: SummarizedExperiment \ndim: 22134 830 \nmetadata(0):\nassays(1): logcounts\nrownames(22134): Zglp1 Vmn2r65 ... Tiparp Kdm1a\nrowData names(0):\ncolnames(830):\n  GSM1136119_EA07068_260297_MOGENE-1_0-ST-V1_MF.11C-11B+.LU_1.CEL\n  GSM1136120_EA07068_260298_MOGENE-1_0-ST-V1_MF.11C-11B+.LU_2.CEL ...\n  GSM920654_EA07068_201214_MOGENE-1_0-ST-V1_TGD.VG4+24ALO.E17.TH_1.CEL\n  GSM920655_EA07068_201215_MOGENE-1_0-ST-V1_TGD.VG4+24ALO.E17.TH_2.CEL\ncolData names(3): label.main label.fine label.ont\n\n\n\n\n\nimport celldex\n\nimmgen_ref = celldex.fetch_reference(\"immgen\", \"2024-02-26\", realize_assays=True)\nprint(immgen_ref)\n\nclass: SummarizedExperiment\ndimensions: (22134, 830)\nassays(1): ['logcounts']\nrow_data columns(0): []\nrow_names(22134): ['Zglp1', 'Vmn2r65', 'Gm10024', ..., 'Ifi44', 'Tiparp', 'Kdm1a']\ncolumn_data columns(3): ['label.main', 'label.fine', 'label.ont']\ncolumn_names(830): ['GSM1136119_EA07068_260297_MOGENE-1_0-ST-V1_MF.11C-11B+.LU_1.CEL', 'GSM1136120_EA07068_260298_MOGENE-1_0-ST-V1_MF.11C-11B+.LU_2.CEL', 'GSM1136121_EA07068_260299_MOGENE-1_0-ST-V1_MF.11C-11B+.LU_3.CEL', ..., 'GSM920653_EA07068_201207_MOGENE-1_0-ST-V1_TGD.VG4+24AHI.E17.TH_3.CEL', 'GSM920654_EA07068_201214_MOGENE-1_0-ST-V1_TGD.VG4+24ALO.E17.TH_1.CEL', 'GSM920655_EA07068_201215_MOGENE-1_0-ST-V1_TGD.VG4+24ALO.E17.TH_2.CEL']\nmetadata(0): \n\n\n\n\n\nNow, let’s identify cells from the zeisel-brain dataset using the immgen reference dataset.\n\n\nR\nPython\n\n\n\n\nsuppressWarnings(library(SingleR))\n\n\nAttaching package: 'SingleR'\n\n\nThe following objects are masked from 'package:celldex':\n\n    BlueprintEncodeData, DatabaseImmuneCellExpressionData,\n    HumanPrimaryCellAtlasData, ImmGenData, MonacoImmuneData,\n    MouseRNAseqData, NovershternHematopoieticData\n\n# sce &lt;- scuttle::logNormCounts(sce)\ncell_labels &lt;- SingleR(test = assay(sce, \"counts\")[,1:100], ref = immgen_ref, labels = immgen_ref$label.main)\n\ntable(cell_labels$labels)\n\n\nEndothelial cells  Epithelial cells       Fibroblasts        Stem cells \n               64                 6                19                 3 \n    Stromal cells \n                8 \n\n\n\n\n\nimport singler\n\nimport scrnaseq\nsce = scrnaseq.fetch_dataset(\"zeisel-brain-2015\", \"2023-12-14\", realize_assays=True)\n\n/usr/local/lib/python3.10/dist-packages/genomicranges/SeqInfo.py:348: UserWarning: 'seqnames' is deprecated, use 'get_seqnames' instead\n  warn(\"'seqnames' is deprecated, use 'get_seqnames' instead\", UserWarning)\n\nimport scranpy\noptions = scranpy.LogNormCountsOptions(with_size_factors=False)\n\n# mat = sce.assays[\"counts\"]\n# log_normed_matrix = scranpy.log_norm_counts(mat_csc, options=options)\n\nimport celldex\nimmgen_ref = celldex.fetch_reference(\"immgen\", \"2024-02-26\", realize_assays=True)\n\nmatches = singler.annotate_single(\n    test_data=sce[:, :100], \n    ref_data = immgen_ref,\n    ref_labels = \"label.main\"\n)\n\n/usr/local/lib/python3.10/dist-packages/genomicranges/SeqInfo.py:348: UserWarning: 'seqnames' is deprecated, use 'get_seqnames' instead\n  warn(\"'seqnames' is deprecated, use 'get_seqnames' instead\", UserWarning)\n/usr/local/lib/python3.10/dist-packages/biocframe/BiocFrame.py:591: UserWarning: Setting property 'metadata' is an in-place operation, use 'set_metadata' instead\n  warn(\n\nimport pandas as pd\n\npd.Series(matches[\"best\"]).value_counts()\n\nEndothelial cells    64\nFibroblasts          19\nStromal cells         8\nEpithelial cells      6\nStem cells            3\nName: count, dtype: int64\n\n\n\n\n\nCongratulations! You have now completed the tutorial on accessing single-cell datasets using scRNAseq and ArtifactDB, and annotating cell types using reference datasets from celldex. For more detailed usage and advanced analyses, refer to the respective documentation of these packages.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tutorial 2: Access single-cell datasets from `scRNAseq` collection and annotate cell types</span>"
    ]
  },
  {
    "objectID": "tutorials/sessioninfo.html",
    "href": "tutorials/sessioninfo.html",
    "title": "Reproduce me!",
    "section": "",
    "text": "Pre-requisites\nimport sys\nimport subprocess\n\nfrom rich import print",
    "crumbs": [
      "Reproduce me!"
    ]
  },
  {
    "objectID": "tutorials/sessioninfo.html#python",
    "href": "tutorials/sessioninfo.html#python",
    "title": "Reproduce me!",
    "section": "Python",
    "text": "Python\nLets make sure we have all packages we need for this section\n\nsys.version_info\n\nsys.version_info(major=3, minor=10, micro=12, releaselevel='final', serial=0)",
    "crumbs": [
      "Reproduce me!"
    ]
  },
  {
    "objectID": "tutorials/sessioninfo.html#packages",
    "href": "tutorials/sessioninfo.html#packages",
    "title": "Reproduce me!",
    "section": "Packages",
    "text": "Packages\n\nimport math\n\nimport biocframe\nimport biocutils\nimport genomicranges\nimport summarizedexperiment\nimport singlecellexperiment\nimport multiassayexperiment\nimport rds2py\nimport session_info\n\n\nsession_info.show()\n\n\nClick to view session information\n-----\nbiocframe                   0.5.10\nbiocutils                   0.1.5\ngenomicranges               0.4.15\nmultiassayexperiment        0.4.2\nrds2py                      0.4.2\nrich                        NA\nsession_info                1.0.0\nsinglecellexperiment        0.4.6\nsummarizedexperiment        0.4.4\n-----\n\n\nClick to view modules imported as dependencies\nPIL                         10.3.0\nanyio                       NA\narrow                       1.3.0\nasttokens                   NA\nattr                        23.2.0\nattrs                       23.2.0\nbabel                       2.15.0\ncertifi                     2024.06.02\ncffi                        1.16.0\ncharset_normalizer          3.3.2\ncomm                        0.2.2\ncycler                      0.12.1\ncython_runtime              NA\ndateutil                    2.9.0.post0\ndebugpy                     1.8.1\ndecorator                   5.1.1\ndefusedxml                  0.7.1\nexceptiongroup              1.2.1\nexecuting                   2.0.1\nfastjsonschema              NA\nfqdn                        NA\nidna                        3.7\nipykernel                   6.29.4\niranges                     0.2.3\nisoduration                 NA\njedi                        0.19.1\njinja2                      3.1.4\njson5                       0.9.25\njsonpointer                 2.4\njsonschema                  4.22.0\njsonschema_specifications   NA\njupyter_events              0.10.0\njupyter_server              2.14.1\njupyterlab_server           2.27.2\nkiwisolver                  1.4.5\nmarkupsafe                  2.1.5\nmatplotlib                  3.9.0\nmatplotlib_inline           0.1.7\nmpl_toolkits                NA\nnbformat                    5.10.4\nnumpy                       1.26.4\noverrides                   NA\npackaging                   24.0\npandas                      2.2.2\nparso                       0.8.4\nplatformdirs                4.2.2\nprometheus_client           NA\nprompt_toolkit              3.0.46\npsutil                      5.9.8\npure_eval                   0.2.2\npydev_ipython               NA\npydevconsole                NA\npydevd                      2.9.5\npydevd_file_utils           NA\npydevd_plugins              NA\npydevd_tracing              NA\npygments                    2.18.0\npyparsing                   3.1.2\npythonjsonlogger            NA\npytz                        2024.1\nreferencing                 NA\nrequests                    2.32.3\nrfc3339_validator           0.1.4\nrfc3986_validator           0.1.1\nrpds                        NA\nscipy                       1.13.1\nsend2trash                  NA\nsitecustomize               NA\nsix                         1.16.0\nsniffio                     1.3.1\nstack_data                  0.6.3\ntornado                     6.4.1\ntraitlets                   5.14.3\ntyping_extensions           NA\nuri_template                NA\nurllib3                     2.2.1\nwcwidth                     0.2.13\nwebcolors                   24.6.0\nwebsocket                   1.8.0\nyaml                        6.0.1\nzmq                         26.0.3\nzoneinfo                    NA\n\n \n-----\nIPython             8.25.0\njupyter_client      8.6.2\njupyter_core        5.7.2\njupyterlab          4.2.1\nnotebook            7.2.1\n-----\nPython 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]\nLinux-6.5.0-1021-azure-x86_64-with-glibc2.35\n-----\nSession information updated at 2024-06-07 20:51",
    "crumbs": [
      "Reproduce me!"
    ]
  }
]